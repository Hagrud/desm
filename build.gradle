import org.apache.tools.ant.filters.ReplaceTokens

buildscript {
	repositories {
		mavenCentral()
		maven {
			name = "gt"
			url = "https://gregtech.overminddl1.com/"
		}
	}
	dependencies {
		classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
	}
}

apply plugin: 'forge'
apply plugin: 'idea'

def timversion
def tcversion
def mcversion

sourceCompatibility = targetCompatibility = "1.7"
compileJava { sourceCompatibility = targetCompatibility = "1.7" }

ext.configFile = file "build.properties"
configFile.withReader {
	def prop = new Properties()
	prop.load(it)
	project.ext.config = new ConfigSlurper().parse prop
}


version=config.modVersion
tcversion=config.modVersion
mcversion="1.7.10-10.13.4.1614-1.7.10"
timversion ="2.4 alpha"
group="train" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "Traincraft"


minecraft {
	version = mcversion
	runDir = "run"
	replace "@VERSION1@", tcversion
	replaceIn "Info.java"
}

processResources
{
	// this will ensure that this task is redone when the versions change.
	inputs.property "version", tcversion
	inputs.property "mcversion", mcversion
	inputs.property "timversion", timversion
	inputs.property "tcversion", tcversion

	// replace stuff in mcmod.info, nothing else
	from(sourceSets.main.resources.srcDirs) {
		include 'mcmod.info'

		// replace version and mcversion
		expand 'version':tcversion, 'mcversion':project.minecraft.version, 'timversion':timversion, 'tcversion':tcversion
	}

	// copy everything else, thats not the mcmod.info
	from(sourceSets.main.resources.srcDirs) {
		exclude 'mcmod.info'
	}
}

repositories {
	maven {
		name "gt"
		url "https://gregtech.overminddl1.com/"
	}
}

dependencies {
	// `compile` will compile it and run with `runClient`/`runServer`
    // `compileOnly will only compile but not load in dev testing (can still put in the instance mods directory though)
	compileOnly "li.cil.oc:OpenComputers:MC1.7.10-1.7.2.1204:dev"
	compileOnly "com.mod-buildcraft:buildcraft:7.1.23:dev"
	compile "codechicken:CodeChickenLib:1.7.10-1.1.3.140:dev"
	compile "codechicken:CodeChickenCore:1.7.10-1.0.7.47:dev"
	compile "codechicken:NotEnoughItems:1.7.10-1.0.5.120:dev"

    // quality of life line to simplify importing jars for experimental testing
    compile fileTree(dir: 'libs', include: ['*.jar'])
}


idea
{
	module
	{
		inheritOutputDirs = true
	}
}
